{
//=========Macro generated from canvas: example/example
//=========  (Tue Nov 06 17:05:56 2018) by ROOT version5.34/36
   TCanvas *example = new TCanvas("example", "example",8,31,800,400);
   example->SetHighLightColor(2);
   example->Range(-0.7764022,0.8822785,4.212728,1.008861);
   example->SetFillColor(0);
   example->SetBorderMode(0);
   example->SetBorderSize(2);
   example->SetTickx(1);
   example->SetTicky(1);
   example->SetLeftMargin(0.17);
   example->SetRightMargin(0.048);
   example->SetTopMargin(0.07);
   example->SetBottomMargin(0.14);
   example->SetFrameFillStyle(0);
   example->SetFrameBorderMode(0);
   example->SetFrameFillStyle(0);
   example->SetFrameBorderMode(0);
   
   TMultiGraph *multigraph = new TMultiGraph();
   multigraph->SetName("");
   multigraph->SetTitle("");
   
   TGraphErrors *gre = new TGraphErrors(7);
   gre->SetName("Graph");
   gre->SetTitle("Graph");
   gre->SetFillStyle(1000);
   gre->SetMarkerStyle(20);
   gre->SetMarkerSize(0.5);
   gre->SetPoint(0,0.146,0.986);
   gre->SetPointError(0,0.036,0.002);
   gre->SetPoint(1,0.27,0.982);
   gre->SetPointError(1,0.058,0.002);
   gre->SetPoint(2,0.412,0.982);
   gre->SetPointError(2,0.089,0.003);
   gre->SetPoint(3,0.512,0.98);
   gre->SetPointError(3,0.105,0.003);
   gre->SetPoint(4,0.788,0.978);
   gre->SetPointError(4,0.162,0.003);
   gre->SetPoint(5,1.029,0.972);
   gre->SetPointError(5,0.203,0.003);
   gre->SetPoint(6,1.546,0.955);
   gre->SetPointError(6,0.296,0.005);
   
   TH1F *Graph_Graph1 = new TH1F("Graph_Graph1","Graph",100,0,2.0152);
   Graph_Graph1->SetMinimum(0.85);
   Graph_Graph1->SetMaximum(0.9918);
   Graph_Graph1->SetDirectory(0);
   Graph_Graph1->SetStats(0);

   Int_t ci;      // for color index setting
   TColor *color; // for color definition with alpha
   ci = TColor::GetColor("#000099");
   Graph_Graph1->SetLineColor(ci);
   Graph_Graph1->GetXaxis()->SetLabelFont(42);
   Graph_Graph1->GetXaxis()->SetLabelSize(0.035);
   Graph_Graph1->GetXaxis()->SetTitleSize(0.035);
   Graph_Graph1->GetXaxis()->SetTitleFont(42);
   Graph_Graph1->GetYaxis()->SetLabelFont(42);
   Graph_Graph1->GetYaxis()->SetLabelSize(0.035);
   Graph_Graph1->GetYaxis()->SetTitleSize(0.035);
   Graph_Graph1->GetYaxis()->SetTitleOffset(0);
   Graph_Graph1->GetYaxis()->SetTitleFont(42);
   Graph_Graph1->GetZaxis()->SetLabelFont(42);
   Graph_Graph1->GetZaxis()->SetLabelSize(0.035);
   Graph_Graph1->GetZaxis()->SetTitleSize(0.035);
   Graph_Graph1->GetZaxis()->SetTitleFont(42);
   gre->SetHistogram(Graph_Graph1);
   
   multigraph->Add(gre,"");
   
   gre = new TGraphErrors(7);
   gre->SetName("Graph");
   gre->SetTitle("Graph");
   gre->SetFillStyle(1000);
   gre->SetLineColor(2);
   gre->SetMarkerColor(2);
   gre->SetMarkerStyle(20);
   gre->SetMarkerSize(0.5);
   gre->SetPoint(0,0.299,0.99);
   gre->SetPointError(0,0.061,0.003);
   gre->SetPoint(1,0.605,0.977);
   gre->SetPointError(1,0.107,0.004);
   gre->SetPoint(2,0.895,0.969);
   gre->SetPointError(2,0.16,0.005);
   gre->SetPoint(3,1.113,0.967);
   gre->SetPointError(3,0.19,0.006);
   gre->SetPoint(4,1.765,0.955);
   gre->SetPointError(4,0.312,0.004);
   gre->SetPoint(5,2.3,0.944);
   gre->SetPointError(5,0.381,0.004);
   gre->SetPoint(6,3.39,0.918);
   gre->SetPointError(6,0.545,0.01);
   
   TH1F *Graph_Graph2 = new TH1F("Graph_Graph2","Graph",100,0,4.3047);
   Graph_Graph2->SetMinimum(0.85);
   Graph_Graph2->SetMaximum(1.0015);
   Graph_Graph2->SetDirectory(0);
   Graph_Graph2->SetStats(0);

   ci = TColor::GetColor("#000099");
   Graph_Graph2->SetLineColor(ci);
   Graph_Graph2->GetXaxis()->SetLabelFont(42);
   Graph_Graph2->GetXaxis()->SetLabelSize(0.035);
   Graph_Graph2->GetXaxis()->SetTitleSize(0.035);
   Graph_Graph2->GetXaxis()->SetTitleFont(42);
   Graph_Graph2->GetYaxis()->SetLabelFont(42);
   Graph_Graph2->GetYaxis()->SetLabelSize(0.035);
   Graph_Graph2->GetYaxis()->SetTitleSize(0.035);
   Graph_Graph2->GetYaxis()->SetTitleOffset(0);
   Graph_Graph2->GetYaxis()->SetTitleFont(42);
   Graph_Graph2->GetZaxis()->SetLabelFont(42);
   Graph_Graph2->GetZaxis()->SetLabelSize(0.035);
   Graph_Graph2->GetZaxis()->SetTitleSize(0.035);
   Graph_Graph2->GetZaxis()->SetTitleFont(42);
   gre->SetHistogram(Graph_Graph2);
   
   multigraph->Add(gre,"");
   multigraph->Draw("AP");
   multigraph->GetXaxis()->SetTitle("#gamma cluster rate (kHz cm^{-2})");
   multigraph->GetXaxis()->SetRange(0,101);
   multigraph->GetXaxis()->SetLabelFont(42);
   multigraph->GetXaxis()->SetLabelSize(0.05);
   multigraph->GetXaxis()->SetTitleSize(0.06);
   multigraph->GetXaxis()->SetTitleOffset(1.);
   multigraph->GetXaxis()->SetTitleFont(42);
   multigraph->GetYaxis()->SetTitle("Muon efficiency");
   multigraph->GetYaxis()->SetLabelFont(42);
   multigraph->GetYaxis()->SetLabelSize(0.06);
   multigraph->GetYaxis()->SetTitleSize(0.06);
   multigraph->GetYaxis()->SetTitleOffset(0.9);
   multigraph->GetYaxis()->SetTitleFont(42);

   multigraph->SetMinimum(0.9);
   multigraph->SetMaximum(1.001);

   TLatex *   tex = new TLatex(0.17,0.94,"");
tex->SetNDC();
   tex->SetTextFont(42);
   tex->SetLineWidth(2);
   tex->Draw();
      tex = new TLatex(0.17,0.94,"CMS");
tex->SetNDC();
   tex->SetTextSize(0.06);
   tex->SetLineWidth(2);
   tex->Draw();
      tex = new TLatex(0.23,0.973,"Preliminary");
tex->SetNDC();
   tex->SetTextAlign(13);
   tex->SetTextFont(52);
   tex->SetTextSize(0.0456);
   tex->SetLineWidth(2);
   tex->Draw();
      tex = new TLatex(0.952,0.94,"GIF++");
tex->SetNDC();
   tex->SetTextAlign(31);
   tex->SetTextFont(42);
   tex->SetLineWidth(2);
   tex->Draw();
      tex = new TLatex(0.17,0.94,"");
tex->SetNDC();
   tex->SetTextFont(42);
   tex->SetLineWidth(2);
   tex->Draw();
   
   TLegend *leg = new TLegend(0.5,0.7,0.9,0.9,NULL,"brNDC");
   leg->SetBorderSize(0);
   leg->SetLineColor(0);
   leg->SetLineStyle(1);
   leg->SetLineWidth(0);
   leg->SetFillColor(0);
   leg->SetFillStyle(1001);
   TLegendEntry *entry=leg->AddEntry("Graph_Graph1","Coax-scheme prototype","lep");
   entry->SetLineColor(1);
   entry->SetLineStyle(1);
   entry->SetLineWidth(1);
   entry->SetMarkerColor(1);
   entry->SetMarkerStyle(20);
   entry->SetMarkerSize(0.5);
   entry->SetTextFont(42);
   entry=leg->AddEntry("Graph_Graph2","Return-scheme prototype","lep");
   entry->SetLineColor(2);
   entry->SetLineStyle(1);
   entry->SetLineWidth(1);
   entry->SetMarkerColor(2);
   entry->SetMarkerStyle(20);
   entry->SetMarkerSize(0.5);
   entry->SetTextFont(42);
   leg->Draw();
   example->Modified();
   example->cd();
   example->SetSelected(example);
}
